#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database")]
public partial class dc_databankDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertBijlage(Bijlage instance);
  partial void UpdateBijlage(Bijlage instance);
  partial void DeleteBijlage(Bijlage instance);
  partial void InsertVak(Vak instance);
  partial void UpdateVak(Vak instance);
  partial void DeleteVak(Vak instance);
  partial void InsertDocent(Docent instance);
  partial void UpdateDocent(Docent instance);
  partial void DeleteDocent(Docent instance);
  partial void InsertDocentVak(DocentVak instance);
  partial void UpdateDocentVak(DocentVak instance);
  partial void DeleteDocentVak(DocentVak instance);
  partial void InsertEvk(Evk instance);
  partial void UpdateEvk(Evk instance);
  partial void DeleteEvk(Evk instance);
  partial void InsertExternVak(ExternVak instance);
  partial void UpdateExternVak(ExternVak instance);
  partial void DeleteExternVak(ExternVak instance);
  partial void InsertOpleiding(Opleiding instance);
  partial void UpdateOpleiding(Opleiding instance);
  partial void DeleteOpleiding(Opleiding instance);
  partial void InsertOpleidingVak(OpleidingVak instance);
  partial void UpdateOpleidingVak(OpleidingVak instance);
  partial void DeleteOpleidingVak(OpleidingVak instance);
  partial void InsertStudent(Student instance);
  partial void UpdateStudent(Student instance);
  partial void DeleteStudent(Student instance);
  #endregion
	
	public dc_databankDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DatabaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public dc_databankDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public dc_databankDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public dc_databankDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public dc_databankDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Bijlage> Bijlages
	{
		get
		{
			return this.GetTable<Bijlage>();
		}
	}
	
	public System.Data.Linq.Table<Vak> Vaks
	{
		get
		{
			return this.GetTable<Vak>();
		}
	}
	
	public System.Data.Linq.Table<Docent> Docents
	{
		get
		{
			return this.GetTable<Docent>();
		}
	}
	
	public System.Data.Linq.Table<DocentVak> DocentVaks
	{
		get
		{
			return this.GetTable<DocentVak>();
		}
	}
	
	public System.Data.Linq.Table<Evk> Evks
	{
		get
		{
			return this.GetTable<Evk>();
		}
	}
	
	public System.Data.Linq.Table<ExternVak> ExternVaks
	{
		get
		{
			return this.GetTable<ExternVak>();
		}
	}
	
	public System.Data.Linq.Table<Opleiding> Opleidings
	{
		get
		{
			return this.GetTable<Opleiding>();
		}
	}
	
	public System.Data.Linq.Table<OpleidingVak> OpleidingVaks
	{
		get
		{
			return this.GetTable<OpleidingVak>();
		}
	}
	
	public System.Data.Linq.Table<Student> Students
	{
		get
		{
			return this.GetTable<Student>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBijlage")]
public partial class Bijlage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_bijlageID;
	
	private string _bijlageURL;
	
	private string _bijlageTitel;
	
	private string _bijlageType;
	
	private System.Nullable<int> _fk_externvakID;
	
	private System.Nullable<byte> _bijlageStatus;
	
	private int _fk_studentID;
	
	private string _bijlageSchoolJaar;
	
	private string _bijlageSchoolGegevens;
	
	private string _bijlageSchoolOpleiding;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_bijlageIDChanging(int value);
    partial void Onpk_bijlageIDChanged();
    partial void OnbijlageURLChanging(string value);
    partial void OnbijlageURLChanged();
    partial void OnbijlageTitelChanging(string value);
    partial void OnbijlageTitelChanged();
    partial void OnbijlageTypeChanging(string value);
    partial void OnbijlageTypeChanged();
    partial void Onfk_externvakIDChanging(System.Nullable<int> value);
    partial void Onfk_externvakIDChanged();
    partial void OnbijlageStatusChanging(System.Nullable<byte> value);
    partial void OnbijlageStatusChanged();
    partial void Onfk_studentIDChanging(int value);
    partial void Onfk_studentIDChanged();
    partial void OnbijlageSchoolJaarChanging(string value);
    partial void OnbijlageSchoolJaarChanged();
    partial void OnbijlageSchoolGegevensChanging(string value);
    partial void OnbijlageSchoolGegevensChanged();
    partial void OnbijlageSchoolOpleidingChanging(string value);
    partial void OnbijlageSchoolOpleidingChanged();
    #endregion
	
	public Bijlage()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_bijlageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_bijlageID
	{
		get
		{
			return this._pk_bijlageID;
		}
		set
		{
			if ((this._pk_bijlageID != value))
			{
				this.Onpk_bijlageIDChanging(value);
				this.SendPropertyChanging();
				this._pk_bijlageID = value;
				this.SendPropertyChanged("pk_bijlageID");
				this.Onpk_bijlageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bijlageURL", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string bijlageURL
	{
		get
		{
			return this._bijlageURL;
		}
		set
		{
			if ((this._bijlageURL != value))
			{
				this.OnbijlageURLChanging(value);
				this.SendPropertyChanging();
				this._bijlageURL = value;
				this.SendPropertyChanged("bijlageURL");
				this.OnbijlageURLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bijlageTitel", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string bijlageTitel
	{
		get
		{
			return this._bijlageTitel;
		}
		set
		{
			if ((this._bijlageTitel != value))
			{
				this.OnbijlageTitelChanging(value);
				this.SendPropertyChanging();
				this._bijlageTitel = value;
				this.SendPropertyChanged("bijlageTitel");
				this.OnbijlageTitelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bijlageType", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string bijlageType
	{
		get
		{
			return this._bijlageType;
		}
		set
		{
			if ((this._bijlageType != value))
			{
				this.OnbijlageTypeChanging(value);
				this.SendPropertyChanging();
				this._bijlageType = value;
				this.SendPropertyChanged("bijlageType");
				this.OnbijlageTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_externvakID", DbType="Int")]
	public System.Nullable<int> fk_externvakID
	{
		get
		{
			return this._fk_externvakID;
		}
		set
		{
			if ((this._fk_externvakID != value))
			{
				this.Onfk_externvakIDChanging(value);
				this.SendPropertyChanging();
				this._fk_externvakID = value;
				this.SendPropertyChanged("fk_externvakID");
				this.Onfk_externvakIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bijlageStatus", DbType="TinyInt")]
	public System.Nullable<byte> bijlageStatus
	{
		get
		{
			return this._bijlageStatus;
		}
		set
		{
			if ((this._bijlageStatus != value))
			{
				this.OnbijlageStatusChanging(value);
				this.SendPropertyChanging();
				this._bijlageStatus = value;
				this.SendPropertyChanged("bijlageStatus");
				this.OnbijlageStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_studentID", DbType="Int NOT NULL")]
	public int fk_studentID
	{
		get
		{
			return this._fk_studentID;
		}
		set
		{
			if ((this._fk_studentID != value))
			{
				this.Onfk_studentIDChanging(value);
				this.SendPropertyChanging();
				this._fk_studentID = value;
				this.SendPropertyChanged("fk_studentID");
				this.Onfk_studentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bijlageSchoolJaar", DbType="VarChar(50)")]
	public string bijlageSchoolJaar
	{
		get
		{
			return this._bijlageSchoolJaar;
		}
		set
		{
			if ((this._bijlageSchoolJaar != value))
			{
				this.OnbijlageSchoolJaarChanging(value);
				this.SendPropertyChanging();
				this._bijlageSchoolJaar = value;
				this.SendPropertyChanged("bijlageSchoolJaar");
				this.OnbijlageSchoolJaarChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bijlageSchoolGegevens", DbType="VarChar(50)")]
	public string bijlageSchoolGegevens
	{
		get
		{
			return this._bijlageSchoolGegevens;
		}
		set
		{
			if ((this._bijlageSchoolGegevens != value))
			{
				this.OnbijlageSchoolGegevensChanging(value);
				this.SendPropertyChanging();
				this._bijlageSchoolGegevens = value;
				this.SendPropertyChanged("bijlageSchoolGegevens");
				this.OnbijlageSchoolGegevensChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bijlageSchoolOpleiding", DbType="VarChar(50)")]
	public string bijlageSchoolOpleiding
	{
		get
		{
			return this._bijlageSchoolOpleiding;
		}
		set
		{
			if ((this._bijlageSchoolOpleiding != value))
			{
				this.OnbijlageSchoolOpleidingChanging(value);
				this.SendPropertyChanging();
				this._bijlageSchoolOpleiding = value;
				this.SendPropertyChanged("bijlageSchoolOpleiding");
				this.OnbijlageSchoolOpleidingChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblVak")]
public partial class Vak : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_vakID;
	
	private string _vakNaam;
	
	private int _vakStudiepunten;
	
	private EntitySet<DocentVak> _DocentVaks;
	
	private EntitySet<Evk> _Evks;
	
	private EntitySet<OpleidingVak> _OpleidingVaks;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_vakIDChanging(int value);
    partial void Onpk_vakIDChanged();
    partial void OnvakNaamChanging(string value);
    partial void OnvakNaamChanged();
    partial void OnvakStudiepuntenChanging(int value);
    partial void OnvakStudiepuntenChanged();
    #endregion
	
	public Vak()
	{
		this._DocentVaks = new EntitySet<DocentVak>(new Action<DocentVak>(this.attach_DocentVaks), new Action<DocentVak>(this.detach_DocentVaks));
		this._Evks = new EntitySet<Evk>(new Action<Evk>(this.attach_Evks), new Action<Evk>(this.detach_Evks));
		this._OpleidingVaks = new EntitySet<OpleidingVak>(new Action<OpleidingVak>(this.attach_OpleidingVaks), new Action<OpleidingVak>(this.detach_OpleidingVaks));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_vakID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_vakID
	{
		get
		{
			return this._pk_vakID;
		}
		set
		{
			if ((this._pk_vakID != value))
			{
				this.Onpk_vakIDChanging(value);
				this.SendPropertyChanging();
				this._pk_vakID = value;
				this.SendPropertyChanged("pk_vakID");
				this.Onpk_vakIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vakNaam", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string vakNaam
	{
		get
		{
			return this._vakNaam;
		}
		set
		{
			if ((this._vakNaam != value))
			{
				this.OnvakNaamChanging(value);
				this.SendPropertyChanging();
				this._vakNaam = value;
				this.SendPropertyChanged("vakNaam");
				this.OnvakNaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vakStudiepunten", DbType="Int NOT NULL")]
	public int vakStudiepunten
	{
		get
		{
			return this._vakStudiepunten;
		}
		set
		{
			if ((this._vakStudiepunten != value))
			{
				this.OnvakStudiepuntenChanging(value);
				this.SendPropertyChanging();
				this._vakStudiepunten = value;
				this.SendPropertyChanged("vakStudiepunten");
				this.OnvakStudiepuntenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblVak_tblDocentVak", Storage="_DocentVaks", ThisKey="pk_vakID", OtherKey="fk_vakID")]
	public EntitySet<DocentVak> DocentVaks
	{
		get
		{
			return this._DocentVaks;
		}
		set
		{
			this._DocentVaks.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblVak_tblEvk", Storage="_Evks", ThisKey="pk_vakID", OtherKey="fk_vakID")]
	public EntitySet<Evk> Evks
	{
		get
		{
			return this._Evks;
		}
		set
		{
			this._Evks.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblVak_tblOpleidingVak", Storage="_OpleidingVaks", ThisKey="pk_vakID", OtherKey="fk_vakID")]
	public EntitySet<OpleidingVak> OpleidingVaks
	{
		get
		{
			return this._OpleidingVaks;
		}
		set
		{
			this._OpleidingVaks.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_DocentVaks(DocentVak entity)
	{
		this.SendPropertyChanging();
		entity.Vak = this;
	}
	
	private void detach_DocentVaks(DocentVak entity)
	{
		this.SendPropertyChanging();
		entity.Vak = null;
	}
	
	private void attach_Evks(Evk entity)
	{
		this.SendPropertyChanging();
		entity.Vak = this;
	}
	
	private void detach_Evks(Evk entity)
	{
		this.SendPropertyChanging();
		entity.Vak = null;
	}
	
	private void attach_OpleidingVaks(OpleidingVak entity)
	{
		this.SendPropertyChanging();
		entity.Vak = this;
	}
	
	private void detach_OpleidingVaks(OpleidingVak entity)
	{
		this.SendPropertyChanging();
		entity.Vak = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDocent")]
public partial class Docent : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_docentID;
	
	private string _docentNaam;
	
	private string _docentWachtwoord;
	
	private double _docentAdmin;
	
	private EntitySet<DocentVak> _DocentVaks;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_docentIDChanging(int value);
    partial void Onpk_docentIDChanged();
    partial void OndocentNaamChanging(string value);
    partial void OndocentNaamChanged();
    partial void OndocentWachtwoordChanging(string value);
    partial void OndocentWachtwoordChanged();
    partial void OndocentAdminChanging(double value);
    partial void OndocentAdminChanged();
    #endregion
	
	public Docent()
	{
		this._DocentVaks = new EntitySet<DocentVak>(new Action<DocentVak>(this.attach_DocentVaks), new Action<DocentVak>(this.detach_DocentVaks));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_docentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_docentID
	{
		get
		{
			return this._pk_docentID;
		}
		set
		{
			if ((this._pk_docentID != value))
			{
				this.Onpk_docentIDChanging(value);
				this.SendPropertyChanging();
				this._pk_docentID = value;
				this.SendPropertyChanged("pk_docentID");
				this.Onpk_docentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docentNaam", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string docentNaam
	{
		get
		{
			return this._docentNaam;
		}
		set
		{
			if ((this._docentNaam != value))
			{
				this.OndocentNaamChanging(value);
				this.SendPropertyChanging();
				this._docentNaam = value;
				this.SendPropertyChanged("docentNaam");
				this.OndocentNaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docentWachtwoord", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string docentWachtwoord
	{
		get
		{
			return this._docentWachtwoord;
		}
		set
		{
			if ((this._docentWachtwoord != value))
			{
				this.OndocentWachtwoordChanging(value);
				this.SendPropertyChanging();
				this._docentWachtwoord = value;
				this.SendPropertyChanged("docentWachtwoord");
				this.OndocentWachtwoordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docentAdmin", DbType="Float NOT NULL")]
	public double docentAdmin
	{
		get
		{
			return this._docentAdmin;
		}
		set
		{
			if ((this._docentAdmin != value))
			{
				this.OndocentAdminChanging(value);
				this.SendPropertyChanging();
				this._docentAdmin = value;
				this.SendPropertyChanged("docentAdmin");
				this.OndocentAdminChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDocent_tblDocentVak", Storage="_DocentVaks", ThisKey="pk_docentID", OtherKey="fk_docentID")]
	public EntitySet<DocentVak> DocentVaks
	{
		get
		{
			return this._DocentVaks;
		}
		set
		{
			this._DocentVaks.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_DocentVaks(DocentVak entity)
	{
		this.SendPropertyChanging();
		entity.Docent = this;
	}
	
	private void detach_DocentVaks(DocentVak entity)
	{
		this.SendPropertyChanging();
		entity.Docent = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDocentVak")]
public partial class DocentVak : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_docentvakID;
	
	private int _fk_vakID;
	
	private int _fk_docentID;
	
	private EntityRef<Docent> _Docent;
	
	private EntityRef<Vak> _Vak;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_docentvakIDChanging(int value);
    partial void Onpk_docentvakIDChanged();
    partial void Onfk_vakIDChanging(int value);
    partial void Onfk_vakIDChanged();
    partial void Onfk_docentIDChanging(int value);
    partial void Onfk_docentIDChanged();
    #endregion
	
	public DocentVak()
	{
		this._Docent = default(EntityRef<Docent>);
		this._Vak = default(EntityRef<Vak>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_docentvakID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_docentvakID
	{
		get
		{
			return this._pk_docentvakID;
		}
		set
		{
			if ((this._pk_docentvakID != value))
			{
				this.Onpk_docentvakIDChanging(value);
				this.SendPropertyChanging();
				this._pk_docentvakID = value;
				this.SendPropertyChanged("pk_docentvakID");
				this.Onpk_docentvakIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_vakID", DbType="Int NOT NULL")]
	public int fk_vakID
	{
		get
		{
			return this._fk_vakID;
		}
		set
		{
			if ((this._fk_vakID != value))
			{
				if (this._Vak.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_vakIDChanging(value);
				this.SendPropertyChanging();
				this._fk_vakID = value;
				this.SendPropertyChanged("fk_vakID");
				this.Onfk_vakIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_docentID", DbType="Int NOT NULL")]
	public int fk_docentID
	{
		get
		{
			return this._fk_docentID;
		}
		set
		{
			if ((this._fk_docentID != value))
			{
				if (this._Docent.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_docentIDChanging(value);
				this.SendPropertyChanging();
				this._fk_docentID = value;
				this.SendPropertyChanged("fk_docentID");
				this.Onfk_docentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDocent_tblDocentVak", Storage="_Docent", ThisKey="fk_docentID", OtherKey="pk_docentID", IsForeignKey=true)]
	public Docent Docent
	{
		get
		{
			return this._Docent.Entity;
		}
		set
		{
			Docent previousValue = this._Docent.Entity;
			if (((previousValue != value) 
						|| (this._Docent.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Docent.Entity = null;
					previousValue.DocentVaks.Remove(this);
				}
				this._Docent.Entity = value;
				if ((value != null))
				{
					value.DocentVaks.Add(this);
					this._fk_docentID = value.pk_docentID;
				}
				else
				{
					this._fk_docentID = default(int);
				}
				this.SendPropertyChanged("Docent");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblVak_tblDocentVak", Storage="_Vak", ThisKey="fk_vakID", OtherKey="pk_vakID", IsForeignKey=true)]
	public Vak Vak
	{
		get
		{
			return this._Vak.Entity;
		}
		set
		{
			Vak previousValue = this._Vak.Entity;
			if (((previousValue != value) 
						|| (this._Vak.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Vak.Entity = null;
					previousValue.DocentVaks.Remove(this);
				}
				this._Vak.Entity = value;
				if ((value != null))
				{
					value.DocentVaks.Add(this);
					this._fk_vakID = value.pk_vakID;
				}
				else
				{
					this._fk_vakID = default(int);
				}
				this.SendPropertyChanged("Vak");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEvk")]
public partial class Evk : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_evkID;
	
	private int _fk_studentID;
	
	private int _fk_vakID;
	
	private System.Nullable<int> _fk_externvakID;
	
	private System.Nullable<double> _evkDocentGoedgekeurd;
	
	private System.Nullable<double> _evkAdminGoedgekeurd;
	
	private EntityRef<Vak> _Vak;
	
	private EntityRef<ExternVak> _ExternVak;
	
	private EntityRef<Student> _Student;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_evkIDChanging(int value);
    partial void Onpk_evkIDChanged();
    partial void Onfk_studentIDChanging(int value);
    partial void Onfk_studentIDChanged();
    partial void Onfk_vakIDChanging(int value);
    partial void Onfk_vakIDChanged();
    partial void Onfk_externvakIDChanging(System.Nullable<int> value);
    partial void Onfk_externvakIDChanged();
    partial void OnevkDocentGoedgekeurdChanging(System.Nullable<double> value);
    partial void OnevkDocentGoedgekeurdChanged();
    partial void OnevkAdminGoedgekeurdChanging(System.Nullable<double> value);
    partial void OnevkAdminGoedgekeurdChanged();
    #endregion
	
	public Evk()
	{
		this._Vak = default(EntityRef<Vak>);
		this._ExternVak = default(EntityRef<ExternVak>);
		this._Student = default(EntityRef<Student>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_evkID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_evkID
	{
		get
		{
			return this._pk_evkID;
		}
		set
		{
			if ((this._pk_evkID != value))
			{
				this.Onpk_evkIDChanging(value);
				this.SendPropertyChanging();
				this._pk_evkID = value;
				this.SendPropertyChanged("pk_evkID");
				this.Onpk_evkIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_studentID", DbType="Int NOT NULL")]
	public int fk_studentID
	{
		get
		{
			return this._fk_studentID;
		}
		set
		{
			if ((this._fk_studentID != value))
			{
				if (this._Student.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_studentIDChanging(value);
				this.SendPropertyChanging();
				this._fk_studentID = value;
				this.SendPropertyChanged("fk_studentID");
				this.Onfk_studentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_vakID", DbType="Int NOT NULL")]
	public int fk_vakID
	{
		get
		{
			return this._fk_vakID;
		}
		set
		{
			if ((this._fk_vakID != value))
			{
				if (this._Vak.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_vakIDChanging(value);
				this.SendPropertyChanging();
				this._fk_vakID = value;
				this.SendPropertyChanged("fk_vakID");
				this.Onfk_vakIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_externvakID", DbType="Int")]
	public System.Nullable<int> fk_externvakID
	{
		get
		{
			return this._fk_externvakID;
		}
		set
		{
			if ((this._fk_externvakID != value))
			{
				if (this._ExternVak.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_externvakIDChanging(value);
				this.SendPropertyChanging();
				this._fk_externvakID = value;
				this.SendPropertyChanged("fk_externvakID");
				this.Onfk_externvakIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_evkDocentGoedgekeurd", DbType="Float")]
	public System.Nullable<double> evkDocentGoedgekeurd
	{
		get
		{
			return this._evkDocentGoedgekeurd;
		}
		set
		{
			if ((this._evkDocentGoedgekeurd != value))
			{
				this.OnevkDocentGoedgekeurdChanging(value);
				this.SendPropertyChanging();
				this._evkDocentGoedgekeurd = value;
				this.SendPropertyChanged("evkDocentGoedgekeurd");
				this.OnevkDocentGoedgekeurdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_evkAdminGoedgekeurd", DbType="Float")]
	public System.Nullable<double> evkAdminGoedgekeurd
	{
		get
		{
			return this._evkAdminGoedgekeurd;
		}
		set
		{
			if ((this._evkAdminGoedgekeurd != value))
			{
				this.OnevkAdminGoedgekeurdChanging(value);
				this.SendPropertyChanging();
				this._evkAdminGoedgekeurd = value;
				this.SendPropertyChanged("evkAdminGoedgekeurd");
				this.OnevkAdminGoedgekeurdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblVak_tblEvk", Storage="_Vak", ThisKey="fk_vakID", OtherKey="pk_vakID", IsForeignKey=true)]
	public Vak Vak
	{
		get
		{
			return this._Vak.Entity;
		}
		set
		{
			Vak previousValue = this._Vak.Entity;
			if (((previousValue != value) 
						|| (this._Vak.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Vak.Entity = null;
					previousValue.Evks.Remove(this);
				}
				this._Vak.Entity = value;
				if ((value != null))
				{
					value.Evks.Add(this);
					this._fk_vakID = value.pk_vakID;
				}
				else
				{
					this._fk_vakID = default(int);
				}
				this.SendPropertyChanged("Vak");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblExternVak_tblEvk", Storage="_ExternVak", ThisKey="fk_externvakID", OtherKey="pk_externvakID", IsForeignKey=true)]
	public ExternVak ExternVak
	{
		get
		{
			return this._ExternVak.Entity;
		}
		set
		{
			ExternVak previousValue = this._ExternVak.Entity;
			if (((previousValue != value) 
						|| (this._ExternVak.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ExternVak.Entity = null;
					previousValue.Evks.Remove(this);
				}
				this._ExternVak.Entity = value;
				if ((value != null))
				{
					value.Evks.Add(this);
					this._fk_externvakID = value.pk_externvakID;
				}
				else
				{
					this._fk_externvakID = default(Nullable<int>);
				}
				this.SendPropertyChanged("ExternVak");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudent_tblEvk", Storage="_Student", ThisKey="fk_studentID", OtherKey="pk_studentID", IsForeignKey=true)]
	public Student Student
	{
		get
		{
			return this._Student.Entity;
		}
		set
		{
			Student previousValue = this._Student.Entity;
			if (((previousValue != value) 
						|| (this._Student.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Student.Entity = null;
					previousValue.Evks.Remove(this);
				}
				this._Student.Entity = value;
				if ((value != null))
				{
					value.Evks.Add(this);
					this._fk_studentID = value.pk_studentID;
				}
				else
				{
					this._fk_studentID = default(int);
				}
				this.SendPropertyChanged("Student");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblExternVak")]
public partial class ExternVak : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_externvakID;
	
	private string _externvakNaam;
	
	private string _externvakStudiepunt;
	
	private EntitySet<Evk> _Evks;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_externvakIDChanging(int value);
    partial void Onpk_externvakIDChanged();
    partial void OnexternvakNaamChanging(string value);
    partial void OnexternvakNaamChanged();
    partial void OnexternvakStudiepuntChanging(string value);
    partial void OnexternvakStudiepuntChanged();
    #endregion
	
	public ExternVak()
	{
		this._Evks = new EntitySet<Evk>(new Action<Evk>(this.attach_Evks), new Action<Evk>(this.detach_Evks));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_externvakID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_externvakID
	{
		get
		{
			return this._pk_externvakID;
		}
		set
		{
			if ((this._pk_externvakID != value))
			{
				this.Onpk_externvakIDChanging(value);
				this.SendPropertyChanging();
				this._pk_externvakID = value;
				this.SendPropertyChanged("pk_externvakID");
				this.Onpk_externvakIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_externvakNaam", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string externvakNaam
	{
		get
		{
			return this._externvakNaam;
		}
		set
		{
			if ((this._externvakNaam != value))
			{
				this.OnexternvakNaamChanging(value);
				this.SendPropertyChanging();
				this._externvakNaam = value;
				this.SendPropertyChanged("externvakNaam");
				this.OnexternvakNaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_externvakStudiepunt", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string externvakStudiepunt
	{
		get
		{
			return this._externvakStudiepunt;
		}
		set
		{
			if ((this._externvakStudiepunt != value))
			{
				this.OnexternvakStudiepuntChanging(value);
				this.SendPropertyChanging();
				this._externvakStudiepunt = value;
				this.SendPropertyChanged("externvakStudiepunt");
				this.OnexternvakStudiepuntChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblExternVak_tblEvk", Storage="_Evks", ThisKey="pk_externvakID", OtherKey="fk_externvakID")]
	public EntitySet<Evk> Evks
	{
		get
		{
			return this._Evks;
		}
		set
		{
			this._Evks.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Evks(Evk entity)
	{
		this.SendPropertyChanging();
		entity.ExternVak = this;
	}
	
	private void detach_Evks(Evk entity)
	{
		this.SendPropertyChanging();
		entity.ExternVak = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblOpleiding")]
public partial class Opleiding : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_opleidingID;
	
	private string _opleidingNaam;
	
	private EntitySet<OpleidingVak> _OpleidingVaks;
	
	private EntitySet<Student> _Students;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_opleidingIDChanging(int value);
    partial void Onpk_opleidingIDChanged();
    partial void OnopleidingNaamChanging(string value);
    partial void OnopleidingNaamChanged();
    #endregion
	
	public Opleiding()
	{
		this._OpleidingVaks = new EntitySet<OpleidingVak>(new Action<OpleidingVak>(this.attach_OpleidingVaks), new Action<OpleidingVak>(this.detach_OpleidingVaks));
		this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_opleidingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_opleidingID
	{
		get
		{
			return this._pk_opleidingID;
		}
		set
		{
			if ((this._pk_opleidingID != value))
			{
				this.Onpk_opleidingIDChanging(value);
				this.SendPropertyChanging();
				this._pk_opleidingID = value;
				this.SendPropertyChanged("pk_opleidingID");
				this.Onpk_opleidingIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opleidingNaam", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string opleidingNaam
	{
		get
		{
			return this._opleidingNaam;
		}
		set
		{
			if ((this._opleidingNaam != value))
			{
				this.OnopleidingNaamChanging(value);
				this.SendPropertyChanging();
				this._opleidingNaam = value;
				this.SendPropertyChanged("opleidingNaam");
				this.OnopleidingNaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOpleiding_tblOpleidingVak", Storage="_OpleidingVaks", ThisKey="pk_opleidingID", OtherKey="fk_opleidingID")]
	public EntitySet<OpleidingVak> OpleidingVaks
	{
		get
		{
			return this._OpleidingVaks;
		}
		set
		{
			this._OpleidingVaks.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOpleiding_tblStudent", Storage="_Students", ThisKey="pk_opleidingID", OtherKey="fk_opleidingID")]
	public EntitySet<Student> Students
	{
		get
		{
			return this._Students;
		}
		set
		{
			this._Students.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_OpleidingVaks(OpleidingVak entity)
	{
		this.SendPropertyChanging();
		entity.Opleiding = this;
	}
	
	private void detach_OpleidingVaks(OpleidingVak entity)
	{
		this.SendPropertyChanging();
		entity.Opleiding = null;
	}
	
	private void attach_Students(Student entity)
	{
		this.SendPropertyChanging();
		entity.Opleiding = this;
	}
	
	private void detach_Students(Student entity)
	{
		this.SendPropertyChanging();
		entity.Opleiding = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblOpleidingVak")]
public partial class OpleidingVak : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_opleidingvakID;
	
	private int _fk_opleidingID;
	
	private int _fk_vakID;
	
	private EntityRef<Opleiding> _Opleiding;
	
	private EntityRef<Vak> _Vak;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_opleidingvakIDChanging(int value);
    partial void Onpk_opleidingvakIDChanged();
    partial void Onfk_opleidingIDChanging(int value);
    partial void Onfk_opleidingIDChanged();
    partial void Onfk_vakIDChanging(int value);
    partial void Onfk_vakIDChanged();
    #endregion
	
	public OpleidingVak()
	{
		this._Opleiding = default(EntityRef<Opleiding>);
		this._Vak = default(EntityRef<Vak>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_opleidingvakID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_opleidingvakID
	{
		get
		{
			return this._pk_opleidingvakID;
		}
		set
		{
			if ((this._pk_opleidingvakID != value))
			{
				this.Onpk_opleidingvakIDChanging(value);
				this.SendPropertyChanging();
				this._pk_opleidingvakID = value;
				this.SendPropertyChanged("pk_opleidingvakID");
				this.Onpk_opleidingvakIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_opleidingID", DbType="Int NOT NULL")]
	public int fk_opleidingID
	{
		get
		{
			return this._fk_opleidingID;
		}
		set
		{
			if ((this._fk_opleidingID != value))
			{
				if (this._Opleiding.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_opleidingIDChanging(value);
				this.SendPropertyChanging();
				this._fk_opleidingID = value;
				this.SendPropertyChanged("fk_opleidingID");
				this.Onfk_opleidingIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_vakID", DbType="Int NOT NULL")]
	public int fk_vakID
	{
		get
		{
			return this._fk_vakID;
		}
		set
		{
			if ((this._fk_vakID != value))
			{
				if (this._Vak.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_vakIDChanging(value);
				this.SendPropertyChanging();
				this._fk_vakID = value;
				this.SendPropertyChanged("fk_vakID");
				this.Onfk_vakIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOpleiding_tblOpleidingVak", Storage="_Opleiding", ThisKey="fk_opleidingID", OtherKey="pk_opleidingID", IsForeignKey=true)]
	public Opleiding Opleiding
	{
		get
		{
			return this._Opleiding.Entity;
		}
		set
		{
			Opleiding previousValue = this._Opleiding.Entity;
			if (((previousValue != value) 
						|| (this._Opleiding.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Opleiding.Entity = null;
					previousValue.OpleidingVaks.Remove(this);
				}
				this._Opleiding.Entity = value;
				if ((value != null))
				{
					value.OpleidingVaks.Add(this);
					this._fk_opleidingID = value.pk_opleidingID;
				}
				else
				{
					this._fk_opleidingID = default(int);
				}
				this.SendPropertyChanged("Opleiding");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblVak_tblOpleidingVak", Storage="_Vak", ThisKey="fk_vakID", OtherKey="pk_vakID", IsForeignKey=true)]
	public Vak Vak
	{
		get
		{
			return this._Vak.Entity;
		}
		set
		{
			Vak previousValue = this._Vak.Entity;
			if (((previousValue != value) 
						|| (this._Vak.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Vak.Entity = null;
					previousValue.OpleidingVaks.Remove(this);
				}
				this._Vak.Entity = value;
				if ((value != null))
				{
					value.OpleidingVaks.Add(this);
					this._fk_vakID = value.pk_vakID;
				}
				else
				{
					this._fk_vakID = default(int);
				}
				this.SendPropertyChanged("Vak");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStudent")]
public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_studentID;
	
	private string _studentNaam;
	
	private string _studentVoornaam;
	
	private string _studentPasswoord;
	
	private string _studentNummer;
	
	private int _fk_opleidingID;
	
	private EntitySet<Evk> _Evks;
	
	private EntityRef<Opleiding> _Opleiding;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_studentIDChanging(int value);
    partial void Onpk_studentIDChanged();
    partial void OnstudentNaamChanging(string value);
    partial void OnstudentNaamChanged();
    partial void OnstudentVoornaamChanging(string value);
    partial void OnstudentVoornaamChanged();
    partial void OnstudentPasswoordChanging(string value);
    partial void OnstudentPasswoordChanged();
    partial void OnstudentNummerChanging(string value);
    partial void OnstudentNummerChanged();
    partial void Onfk_opleidingIDChanging(int value);
    partial void Onfk_opleidingIDChanged();
    #endregion
	
	public Student()
	{
		this._Evks = new EntitySet<Evk>(new Action<Evk>(this.attach_Evks), new Action<Evk>(this.detach_Evks));
		this._Opleiding = default(EntityRef<Opleiding>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_studentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_studentID
	{
		get
		{
			return this._pk_studentID;
		}
		set
		{
			if ((this._pk_studentID != value))
			{
				this.Onpk_studentIDChanging(value);
				this.SendPropertyChanging();
				this._pk_studentID = value;
				this.SendPropertyChanged("pk_studentID");
				this.Onpk_studentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentNaam", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string studentNaam
	{
		get
		{
			return this._studentNaam;
		}
		set
		{
			if ((this._studentNaam != value))
			{
				this.OnstudentNaamChanging(value);
				this.SendPropertyChanging();
				this._studentNaam = value;
				this.SendPropertyChanged("studentNaam");
				this.OnstudentNaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentVoornaam", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string studentVoornaam
	{
		get
		{
			return this._studentVoornaam;
		}
		set
		{
			if ((this._studentVoornaam != value))
			{
				this.OnstudentVoornaamChanging(value);
				this.SendPropertyChanging();
				this._studentVoornaam = value;
				this.SendPropertyChanged("studentVoornaam");
				this.OnstudentVoornaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentPasswoord", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string studentPasswoord
	{
		get
		{
			return this._studentPasswoord;
		}
		set
		{
			if ((this._studentPasswoord != value))
			{
				this.OnstudentPasswoordChanging(value);
				this.SendPropertyChanging();
				this._studentPasswoord = value;
				this.SendPropertyChanged("studentPasswoord");
				this.OnstudentPasswoordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentNummer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string studentNummer
	{
		get
		{
			return this._studentNummer;
		}
		set
		{
			if ((this._studentNummer != value))
			{
				this.OnstudentNummerChanging(value);
				this.SendPropertyChanging();
				this._studentNummer = value;
				this.SendPropertyChanged("studentNummer");
				this.OnstudentNummerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_opleidingID", DbType="Int NOT NULL")]
	public int fk_opleidingID
	{
		get
		{
			return this._fk_opleidingID;
		}
		set
		{
			if ((this._fk_opleidingID != value))
			{
				if (this._Opleiding.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_opleidingIDChanging(value);
				this.SendPropertyChanging();
				this._fk_opleidingID = value;
				this.SendPropertyChanged("fk_opleidingID");
				this.Onfk_opleidingIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudent_tblEvk", Storage="_Evks", ThisKey="pk_studentID", OtherKey="fk_studentID")]
	public EntitySet<Evk> Evks
	{
		get
		{
			return this._Evks;
		}
		set
		{
			this._Evks.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOpleiding_tblStudent", Storage="_Opleiding", ThisKey="fk_opleidingID", OtherKey="pk_opleidingID", IsForeignKey=true)]
	public Opleiding Opleiding
	{
		get
		{
			return this._Opleiding.Entity;
		}
		set
		{
			Opleiding previousValue = this._Opleiding.Entity;
			if (((previousValue != value) 
						|| (this._Opleiding.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Opleiding.Entity = null;
					previousValue.Students.Remove(this);
				}
				this._Opleiding.Entity = value;
				if ((value != null))
				{
					value.Students.Add(this);
					this._fk_opleidingID = value.pk_opleidingID;
				}
				else
				{
					this._fk_opleidingID = default(int);
				}
				this.SendPropertyChanged("Opleiding");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Evks(Evk entity)
	{
		this.SendPropertyChanging();
		entity.Student = this;
	}
	
	private void detach_Evks(Evk entity)
	{
		this.SendPropertyChanging();
		entity.Student = null;
	}
}
#pragma warning restore 1591
